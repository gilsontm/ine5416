(defun isValidSudoku (m)
    (setq res T)
    (dotimes (i 9)
        (setq row (make-array 9))
        (setq col (make-array 9))
        (dotimes (j 9)
            (setf (aref row (- (aref m i j) 1)) T)
            (setf (aref col (- (aref m j i) 1)) T)
        )
        (dotimes (j 9)
            (if (or (not (aref row j)) (not (aref col j)))
                (setq res NIL)
            )
        )
    )
    (dotimes (x 3)
        (dotimes (y 3)
            (setq box (make-array 9))
            (dotimes (i 3)
                (dotimes (j 3)
                    (setf 
                        (aref
                            box
                            (- (aref m (+ (* x 3) i) (+ (* y 3) j)) 1)
                        )
                        T
                    )
                )
            )
            (dotimes (j 9)
                (if (not (aref box j))
                    (setq res NIL)
                )
            )
        )
    )
    res
)

(setf a (make-array '(9 9)
        :initial-contents '(
            (1 3 2 5 7 9 4 6 8)
            (4 9 8 2 6 1 3 7 5)
            (7 5 6 3 8 4 2 1 9)
            (6 4 3 1 5 8 7 9 2)
            (5 2 1 7 9 3 8 4 6)
            (9 8 7 4 2 6 5 3 1)
            (2 1 4 9 3 5 6 8 7)
            (3 6 5 8 1 7 9 2 4)
            (8 7 9 6 4 2 1 5 3)
        )
    )
)

(defun main ()
    (write-line (write-to-string (isValidSudoku a)))
    (setf (aref a 0 0) 2)
    (write-line (write-to-string (isValidSudoku a)))
)

(main)
